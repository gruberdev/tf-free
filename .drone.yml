---
kind: pipeline
type: docker
name: Static Code Analysis
steps:
  - name: plan
    image: golang:1.16.4-alpine
    commands:
      - apk add build-base git curl
      - apk add --no-cache terraform --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community
      - echo $GCP_SERVICE_ACCOUNT > gcp.json
      - export GOOGLE_APPLICATION_CREDENTIALS=$PWD/gcp.json
      - terraform init
      - terraform plan
    when:
      event:
        - push
        - pull_request
    environment:
      GOOGLE_PROJECT:
        from_secret: gcp_project_id
      GCP_SERVICE_ACCOUNT:
        from_secret: gcp_project_key

  - name: tfsec
    image: tfsec/tfsec
    commands:
      - tfsec . -e GCP003,AWS044,GEN003
    when:
      event:
        - push
        - pull_request
    environment:
      GOOGLE_PROJECT:
        from_secret: gcp_project_id

  - name: terrascan
    image: accurics/terrascan
    commands:
      - terrascan scan
    when:
      event:
        - push
        - pull_request
        - rollback
    environment:
      GOOGLE_PROJECT:
        from_secret: gcp_project_id

---
kind: pipeline
type: docker
name: Google Cloud Provider (GCP)
steps:
  - name: Unit Compute
    image: golang:1.16.4-alpine
    commands:
      - apk add curl
      - sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
      - task init-drone
      - task drone-gcp
      - task unit-compute-gcp
    when:
      branch:
        include:
          - master
          - feature/gcp_*
      event:
        - push
    environment:
      GOOGLE_PROJECT:
        from_secret: gcp_project_id

  - name: Unit Networking
    image: golang:1.16.4-alpine
    commands:
      - apk add curl
      - sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
      - task init-drone
      - task drone-gcp
      - tasp unit-network-gcp
    when:
      branch:
        include:
          - master
          - feature/gcp_*
      event:
        - push
    environment:
      GOOGLE_PROJECT:
        from_secret: gcp_project_id

  - name: Integration Core Provider
    image: golang:1.16.4-alpine
    commands:
      - apk add curl
      - sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
      - task init-drone
      - task drone-gcp
      - task integration-gcp
    when:
      branch:
        include:
          - master
          - feature/gcp_*
      event:
        - push
    depends_on:
      - Unit Networking
    environment:
      GOOGLE_PROJECT:
        from_secret: gcp_project_id

---
kind: pipeline
type: docker
name: Documentation
steps:
  - name: build_static
    image: node:14.4
    commands:
      - npm install -g @codedoc/cli
      - codedoc install
      - codedoc build
    when:
      branch:
        - master
      event:
        - push
